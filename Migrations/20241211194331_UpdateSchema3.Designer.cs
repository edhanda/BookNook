// <auto-generated />
using System;
using BookStoreApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStoreApp.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20241211194331_UpdateSchema3")]
    partial class UpdateSchema3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStoreApp.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "F. Scott Fitzgerald",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/71V1cA2fiZL._AC_UF1000,1000_QL80_.jpg",
                            Description = "A story of the mysterious Jay Gatsby and his unrequited love for Daisy Buchanan, set in the Roaring Twenties.",
                            Genre = "Classic",
                            Price = 10.99m,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 2,
                            Author = "George Orwell",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/71rpa1-kyvL._AC_UF1000,1000_QL80_.jpg",
                            Description = "A chilling depiction of a totalitarian regime where surveillance and mind control are omnipresent.",
                            Genre = "Dystopian",
                            Price = 8.99m,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Harper Lee",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/71FxgtFKcQL._AC_UF1000,1000_QL80_.jpg",
                            Description = "A powerful exploration of racial injustice and childhood innocence in the Deep South.",
                            Genre = "Fiction",
                            Price = 12.99m,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 4,
                            Author = "J.D. Salinger",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/51TI+w56qFL._SY445_SX342_.jpg",
                            Description = "A coming-of-age novel about teenage rebellion.",
                            Genre = "Modern Classic",
                            Price = 9.99m,
                            Title = "The Catcher in the Rye"
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.R.R. Tolkien",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/51QnRBHJ+sL._SY445_SX342_.jpg",
                            Description = "The prelude to the epic Lord of the Rings series.",
                            Genre = "Fantasy",
                            Price = 14.99m,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 6,
                            Author = "J.R.R. Tolkien",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/81NJTjH8EcL._SY466_.jpg",
                            Description = "An epic adventure in Middle-earth, chronicling the quest to destroy the One Ring.",
                            Genre = "Fantasy",
                            Price = 87.99m,
                            Title = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Paulo Coelho",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/71H52+sSb4L._SY466_.jpg",
                            Description = "A journey of self-discovery following Santiago, a shepherd, in search of his personal legend.",
                            Genre = "Philosophical Fiction",
                            Price = 31.49m,
                            Title = "The Alchemist"
                        },
                        new
                        {
                            Id = 8,
                            Author = "J.K. Rowling",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/81YOuOGFCJL._AC_UF1000,1000_QL80_.jpg",
                            Description = "The first book in the beloved Harry Potter series, introducing the magical world of Hogwarts.",
                            Genre = "Fantasy",
                            Price = 12.99m,
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Markus Zusak",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/41LuUlddrhL._SY445_SX342_.jpg",
                            Description = "A hauntingly beautiful story set in Nazi Germany, narrated by Death itself.",
                            Genre = "Historical Fiction",
                            Price = 8.99m,
                            Title = "The Book Thief"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Yuval Noah Harari",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/61ZKK6Y1nFL._SY466_.jpg",
                            Description = "A fascinating exploration of the history and evolution of humankind.",
                            Genre = "Non-Fiction",
                            Price = 23.99m,
                            Title = "Sapiens: A Brief History of Humankind"
                        },
                        new
                        {
                            Id = 11,
                            Author = "James Clear",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/91bYsX41DVL._AC_UF1000,1000_QL80_.jpg",
                            Description = "A guide to building good habits and breaking bad ones for a successful life.",
                            Genre = "Self-Help",
                            Price = 16.99m,
                            Title = "Atomic Habits"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Frank Herbert",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/41KnOXaLyuL._SY445_SX342_.jpg",
                            Description = "A science fiction masterpiece set on the desert planet Arrakis, exploring politics, religion, and survival.",
                            Genre = "Science Fiction",
                            Price = 11.99m,
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Michelle Obama",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/81h2gWPTYJL._AC_UF1000,1000_QL80_.jpg",
                            Description = "An intimate and inspiring memoir by the former First Lady of the United States.",
                            Genre = "Biography",
                            Price = 18.49m,
                            Title = "Becoming"
                        },
                        new
                        {
                            Id = 14,
                            Author = "Margaret Wise Brown",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/51kpoART0HL._SX342_SY445_.jpg",
                            Description = "A timeless bedtime story for children, filled with soothing rhythms and illustrations.",
                            Genre = "Children's Fiction",
                            Price = 6.99m,
                            Title = "Goodnight Moon"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Jane Austen",
                            CoverImageUrl = "https://m.media-amazon.com/images/I/81NLDvyAHrL._SY466_.jpg",
                            Description = "A timeless tale of love and social commentary, centered around Elizabeth Bennet and Mr. Darcy.",
                            Genre = "Classic Romance",
                            Price = 7.99m,
                            Title = "Pride and Prejudice"
                        });
                });

            modelBuilder.Entity("BookStoreApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BookStoreApp.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BookStoreApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@booknook.com",
                            FullName = "Admin User",
                            Password = "JAvlGPq9JyTdtvBO6x2llnRI1+gxwIyPqCKAn3THIKk=",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("BookStoreApp.Models.OrderItem", b =>
                {
                    b.HasOne("BookStoreApp.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreApp.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BookStoreApp.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
